{"ast":null,"code":"import _defineProperty from \"/Users/Jenna/JavaScript/_Projects/shopping-cart/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Item1 from '../images/item1.png';\nimport Item2 from '../images/item2.png';\nimport Item3 from '../images/item3.png';\nimport Item4 from '../images/item4.png';\nimport Item5 from '../images/item5.png';\nimport Item6 from '../images/item6.png';\nimport { ADD_TO_CART, REMOVE_ITEM, ADD_QUANTITY, MINUS_QUANTITY } from '../constants/ActionTypes';\nconst initState = {\n  items: [{\n    id: 1,\n    title: 'Black Eyelet Dress',\n    desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n    price: 120,\n    img: Item1\n  }, {\n    id: 2,\n    title: 'Halliday Sunglasses',\n    desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n    price: 30,\n    img: Item2\n  }, {\n    id: 3,\n    title: 'Boardwalk Sandals',\n    desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n    price: 90,\n    img: Item3\n  }, {\n    id: 4,\n    title: 'Chore Coat',\n    desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n    price: 110,\n    img: Item4\n  }, {\n    id: 5,\n    title: 'Sunset Crossbody Bag',\n    desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n    price: 90,\n    img: Item5\n  }, {\n    id: 6,\n    title: 'Perfect Shorts',\n    desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n    price: 70,\n    img: Item6\n  }],\n  addedItems: [],\n  total: 0\n};\n\nconst cartReducer = (state = initState, action) => {\n  // If item is added to cart...\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.items.find(item => item.id === action.id);\n    let existedItem = state.addedItems.find(item => action.id === item.id); // Check if item already exists in cart\n    // If item is already in cart, increase quantity by 1, and calculate cart total\n\n    if (existedItem) {\n      addedItem.quantity += 1;\n      return _objectSpread({}, state, {\n        total: state.total + addedItem.price\n      });\n    } else {\n      // Add item to cart and calculate cart total...\n      addedItem.quantity = 1;\n      let newTotal = state.total + addedItem.price;\n      return _objectSpread({}, state, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  } else {\n    return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/shopping-cart/src/reducers/CartReducer.js"],"names":["Item1","Item2","Item3","Item4","Item5","Item6","ADD_TO_CART","REMOVE_ITEM","ADD_QUANTITY","MINUS_QUANTITY","initState","items","id","title","desc","price","img","addedItems","total","cartReducer","state","action","type","addedItem","find","item","existedItem","quantity","newTotal"],"mappings":"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","sourcesContent":["import Item1 from '../images/item1.png';\nimport Item2 from '../images/item2.png';\nimport Item3 from '../images/item3.png';\nimport Item4 from '../images/item4.png';\nimport Item5 from '../images/item5.png';\nimport Item6 from '../images/item6.png';\nimport { \n    ADD_TO_CART,\n    REMOVE_ITEM, \n    ADD_QUANTITY, \n    MINUS_QUANTITY\n} from '../constants/ActionTypes';\n\nconst initState = {\n    items: [\n        { \n            id: 1, \n            title: 'Black Eyelet Dress', \n            desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n            price: 120,\n            img: Item1\n        },\n        {\n            id: 2,\n            title: 'Halliday Sunglasses',\n            desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n            price: 30,\n            img: Item2\n        },\n        {\n            id: 3,\n            title: 'Boardwalk Sandals',\n            desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n            price: 90,\n            img: Item3\n        },\n        {\n            id: 4,\n            title: 'Chore Coat',\n            desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n            price: 110,\n            img: Item4\n        },\n        {\n            id: 5,\n            title: 'Sunset Crossbody Bag',\n            desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n            price: 90,\n            img: Item5\n        },\n        {\n            id: 6,\n            title: 'Perfect Shorts',\n            desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.',\n            price: 70,\n            img: Item6\n        }\n    ],\n    addedItems: [],\n    total: 0\n}\n\nconst cartReducer = (state = initState, action) => {\n    // If item is added to cart...\n    if (action.type === ADD_TO_CART) {\n        let addedItem = state.items.find(item => item.id === action.id);\n        let existedItem = state.addedItems.find(item => action.id === item.id);\n\n        // Check if item already exists in cart\n        // If item is already in cart, increase quantity by 1, and calculate cart total\n        if (existedItem) {\n            addedItem.quantity += 1;\n            return {\n                ...state,\n                total: state.total + addedItem.price\n            }\n        } else {\n            // Add item to cart and calculate cart total...\n            addedItem.quantity = 1;\n            let newTotal = state.total + addedItem.price;\n            return {\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                total: newTotal\n            }\n        }\n    } else {\n        return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}