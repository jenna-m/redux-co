{"ast":null,"code":"var _jsxFileName = \"/Users/Jenna/JavaScript/_Projects/shopping-cart/client/src/components/footer/contact/contactForm.js\";\nimport React, { useRef } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nconst schema = yup.object().shape({\n  name: yup.string().required('Name required'),\n  email: yup.string().email().required('Valid email required'),\n  message: yup.string().min(10).max(600).required('Message required')\n});\nconst formEl = useRef(null);\n\nconst doHtmlFormPost = values => {\n  formEl.current.submit();\n};\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      doHtmlFormPost;\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"contact-form-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      validationSchema: schema,\n      initialValies: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          // Setting API errors\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, ({\n      isSubmitting\n    }) => React.createElement(Form, {\n      action: \"/contact\",\n      ref: formEl,\n      onSubmit: this.handleSubmit,\n      role: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: true,\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Field, {\n      type: \"name\",\n      name: \"name\",\n      id: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: true,\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: true,\n      name: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Message\"), React.createElement(Field, {\n      component: \"textarea\",\n      name: \"message\",\n      id: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"message\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, window.location.hash === '#success' && React.createElement(\"div\", {\n      id: \"contact-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Your message has been sent!\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Please allow up to 48 hours for a response\")), window.location.hash === '#error' && React.createElement(\"div\", {\n      id: \"contact-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"An error occured while submitting the form.\"))))));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/shopping-cart/client/src/components/footer/contact/contactForm.js"],"names":["React","useRef","Formik","Form","Field","ErrorMessage","yup","schema","object","shape","name","string","required","email","message","min","max","formEl","doHtmlFormPost","values","current","submit","ContactForm","Component","constructor","props","handleSubmit","bind","render","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","window","location","hash"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    name: yup.string().required('Name required'),\n    email: yup.string().email().required('Valid email required'),\n    message: yup.string().min(10).max(600).required('Message required')\n});\n\nconst formEl = useRef(null);\n\nconst doHtmlFormPost = values => {\n    formEl.current.submit();\n};\n\nclass ContactForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = () => {\n        doHtmlFormPost\n    }\n\n    render() {\n        return (\n            <div className=\"contact-form-content\">\n                <Formik\n                    validationSchema={schema}\n                    initialValies={{\n                        name: '', \n                        email: '', \n                        message: '' \n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                            // Setting API errors\n                            alert(JSON.stringify(values, null, 2));\n                            setSubmitting(false);\n                        }, 400)\n                    }}\n                    >\n                        {({ isSubmitting }) => (\n                            <Form action=\"/contact\" ref={formEl} onSubmit={this.handleSubmit} role=\"form\">\n                                <label for name=\"name\">Name</label>\n                                <Field type=\"name\" name=\"name\" id=\"name\" />\n                                <ErrorMessage name=\"name\" component=\"span\" />\n                                <label for name=\"email\">Email</label>\n                                <Field type=\"email\" name=\"email\" id=\"email\" />\n                                <ErrorMessage name=\"email\" component=\"span\" />\n                                <label for name=\"message\">Message</label>\n                                <Field component=\"textarea\" name=\"message\" id=\"message\" />\n                                <ErrorMessage name=\"message\" component=\"span\" />\n                                <button type=\"submit\" disabled={isSubmitting} >\n                                    Submit\n                                </button>\n                                <div>\n                                    { window.location.hash === '#success' &&\n                                <div id=\"contact-success\"><p>Your message has been sent!</p>\n                                <span>Please allow up to 48 hours for a response</span>\n                                </div> }\n                                    { window.location.hash === '#error' && <div id=\"contact-error\"><p>An error occured while submitting the form.</p></div> }\n                                </div>\n                            </Form>\n                        )}\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}