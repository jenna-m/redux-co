{"ast":null,"code":"import _defineProperty from \"/Users/Jenna/JavaScript/_Projects/shopping-cart/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { ShopContent } from '../constants/ShopContent';\nimport { ADD_TO_CART, REMOVE_ITEM, ADD_QUANTITY, MINUS_QUANTITY, ADD_SHIPPING, SUBTRACT_SHIPPING, shippingCost, ADD_PICKUP, SET_GC_VAL } from '../constants/ActionTypes';\nconst initState = {\n  items: ShopContent,\n  addedItems: [],\n  subTotal: 0,\n  cartTotal: 0,\n  giftCardVal: 0\n};\nconst shoppingApp = combineReducers({\n  cartReducer,\n  giftCardReducer\n});\n\nconst cartReducer = (state = initState, action) => {\n  // If item is added to cart...\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.items.find(item => item.id === action.id);\n    let existedItem = state.addedItems.find(item => action.id === item.id); // Check if item already exists in cart\n    // If item is already in cart, increase quantity by 1, and calculate subTotal and cartTotal\n\n    if (existedItem) {\n      addedItem.quantity += 1;\n      return _objectSpread({}, state, {\n        subTotal: state.subTotal + addedItem.price,\n        cartTotal: state.subTotal + addedItem.price\n      });\n    } else {\n      // Add item to cart and calculate subTotal and cartTotal\n      addedItem.quantity = 1;\n      let newSubTotal = state.subTotal + addedItem.price;\n      return _objectSpread({}, state, {\n        addedItems: [...state.addedItems, addedItem],\n        subTotal: newSubTotal,\n        cartTotal: newSubTotal\n      });\n    }\n  } //If item is removed from cart, remove item and recalculate subTotal and cartTotal\n\n\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let newItems = state.addedItems.filter(item => action.id !== item.id);\n    let newSubTotal = state.subTotal - itemToRemove.price * itemToRemove.quantity;\n    console.log(itemToRemove);\n    return _objectSpread({}, state, {\n      addedItems: newItems,\n      subTotal: newSubTotal,\n      cartTotal: newSubTotal\n    });\n  } // If item quantity is increased, increase quantity by 1 and recalculate subTotal and cartTotal\n\n\n  if (action.type === ADD_QUANTITY) {\n    const addedItem = state.items.find(item => item.id === action.id);\n    const updatedItems = state.addedItems.map(item => item.id === action.id ? _objectSpread({}, item, {\n      quantity: item.quantity + 1\n    }) : item);\n    let newSubTotal = state.subTotal + addedItem.price;\n    return _objectSpread({}, state, {\n      addedItems: updatedItems,\n      subTotal: newSubTotal,\n      cartTotal: newSubTotal\n    });\n  } // If item quantity is decreased, subtract quantity and recalculate subTotal and cartTotal\n\n\n  if (action.type === MINUS_QUANTITY) {\n    let subtractedItem = state.items.find(item => item.id === action.id);\n\n    if (subtractedItem.quantity === 1) {\n      const updatedItems = state.addedItems.map(item => item.id === action.id ? _objectSpread({}, item, {\n        quantity: item.quantity - 1\n      }) : item);\n      let newSubTotal = state.subTotal - subtractedItem.price;\n      return _objectSpread({}, state, {\n        addedItems: updatedItems,\n        subTotal: newSubTotal,\n        cartTotal: newSubTotal\n      });\n    } else {\n      subtractedItem.quantity -= 1;\n      const updatedItems = state.addedItems.map(item => item.id === action.id ? _objectSpread({}, item, {\n        quantity: item.quantity - 1\n      }) : item);\n      let newSubTotal = state.subTotal - subtractedItem.price;\n      return _objectSpread({}, state, {\n        addedItems: updatedItems,\n        subTotal: newSubTotal,\n        cartTotal: newSubTotal\n      });\n    }\n  } // Logic to add and subtract shipping costs\n\n\n  if (action.type === ADD_SHIPPING) {\n    return _objectSpread({}, state, {\n      subTotal: state.subTotal,\n      shipping: shippingCost,\n      cartTotal: state.subTotal + shippingCost\n    });\n  }\n\n  if (action.type === SUBTRACT_SHIPPING) {\n    return _objectSpread({}, state, {\n      subTotal: state.subTotal,\n      shipping: 0,\n      cartTotal: state.subTotal - shippingCost\n    });\n  } // Logic for in-store pickup\n\n\n  if (action.type === ADD_PICKUP) {\n    let shippingCost = 0;\n    return _objectSpread({}, state, {\n      subTotal: state.subTotal,\n      shipping: 0,\n      cartTotal: state.subTotal + shippingCost\n    });\n  }\n\n  return state;\n};\n\nconst giftCardReducer = (state = initState, action) => {};\n\nexport default shoppingApp;","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/shopping-cart/src/reducers/CartReducer.js"],"names":["combineReducers","ShopContent","ADD_TO_CART","REMOVE_ITEM","ADD_QUANTITY","MINUS_QUANTITY","ADD_SHIPPING","SUBTRACT_SHIPPING","shippingCost","ADD_PICKUP","SET_GC_VAL","initState","items","addedItems","subTotal","cartTotal","giftCardVal","shoppingApp","cartReducer","giftCardReducer","state","action","type","addedItem","find","item","id","existedItem","quantity","price","newSubTotal","itemToRemove","newItems","filter","console","log","updatedItems","map","subtractedItem","shipping"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport { ShopContent } from '../constants/ShopContent';\nimport { \n    ADD_TO_CART,\n    REMOVE_ITEM, \n    ADD_QUANTITY, \n    MINUS_QUANTITY,\n    ADD_SHIPPING,\n    SUBTRACT_SHIPPING,\n    shippingCost,\n    ADD_PICKUP,\n    SET_GC_VAL\n} from '../constants/ActionTypes';\n\nconst initState = {\n    items: ShopContent,\n    addedItems: [],\n    subTotal: 0,\n    cartTotal: 0,\n    giftCardVal: 0\n}\n\nconst shoppingApp = combineReducers({\n    cartReducer,\n    giftCardReducer\n})\n\nconst cartReducer = (state = initState, action) => {\n    // If item is added to cart...\n    if (action.type === ADD_TO_CART) {\n        let addedItem = state.items.find(item => item.id === action.id);\n        let existedItem = state.addedItems.find(item => action.id === item.id);\n\n        // Check if item already exists in cart\n        // If item is already in cart, increase quantity by 1, and calculate subTotal and cartTotal\n        if (existedItem) {\n            addedItem.quantity += 1;\n            return {\n                ...state,\n                subTotal: state.subTotal + addedItem.price,\n                cartTotal: state.subTotal + addedItem.price\n            }\n        } else {\n            // Add item to cart and calculate subTotal and cartTotal\n            addedItem.quantity = 1;\n            let newSubTotal = state.subTotal + addedItem.price;\n            return {\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                subTotal: newSubTotal,\n                cartTotal: newSubTotal\n            }\n        }\n    }\n\n    //If item is removed from cart, remove item and recalculate subTotal and cartTotal\n    if (action.type === REMOVE_ITEM) {\n        let itemToRemove = state.addedItems.find(item => action.id === item.id);\n        let newItems = state.addedItems.filter(item => action.id !== item.id);\n\n        let newSubTotal = state.subTotal - (itemToRemove.price * itemToRemove.quantity);\n        console.log(itemToRemove);\n        return {\n            ...state,\n            addedItems: newItems,\n            subTotal: newSubTotal,\n            cartTotal: newSubTotal\n        }\n    }\n    \n    // If item quantity is increased, increase quantity by 1 and recalculate subTotal and cartTotal\n    if (action.type === ADD_QUANTITY) {\n        const addedItem = state.items.find(item => item.id === action.id);\n        const updatedItems = state.addedItems.map(item => item.id === action.id ? {...item, quantity: item.quantity + 1 } : item);\n        let newSubTotal = state.subTotal + addedItem.price;\n        \n        return {\n            ...state,\n            addedItems: updatedItems,\n            subTotal: newSubTotal,\n            cartTotal: newSubTotal\n        }\n    }\n\n    // If item quantity is decreased, subtract quantity and recalculate subTotal and cartTotal\n    if (action.type === MINUS_QUANTITY) {\n        let subtractedItem = state.items.find(item => item.id === action.id);\n        if (subtractedItem.quantity === 1) {\n            const updatedItems = state.addedItems.map(item => item.id === action.id ? {...item, quantity: item.quantity - 1 } : item);\n            let newSubTotal = state.subTotal - subtractedItem.price;\n            return {\n                ...state,\n                addedItems: updatedItems,\n                subTotal: newSubTotal,\n                cartTotal: newSubTotal\n            }\n        } else {\n            subtractedItem.quantity -= 1;\n            const updatedItems = state.addedItems.map(item => item.id === action.id ? {...item, quantity: item.quantity - 1 } : item);\n            let newSubTotal = state.subTotal - subtractedItem.price;\n            return {\n                ...state,\n                addedItems: updatedItems,\n                subTotal: newSubTotal,\n                cartTotal: newSubTotal\n            }\n        }\n    }\n\n    // Logic to add and subtract shipping costs\n    if (action.type === ADD_SHIPPING) {\n        return {\n            ...state,\n            subTotal: state.subTotal,\n            shipping: shippingCost,\n            cartTotal: state.subTotal + shippingCost\n        }\n    }\n\n    if (action.type === SUBTRACT_SHIPPING) {\n        return {\n            ...state,\n            subTotal: state.subTotal,\n            shipping: 0,\n            cartTotal: state.subTotal - shippingCost\n        }\n    }\n\n    // Logic for in-store pickup\n    if (action.type === ADD_PICKUP) {\n        let shippingCost = 0;\n        return {\n            ...state,\n            subTotal: state.subTotal,\n            shipping: 0,\n            cartTotal: state.subTotal + shippingCost\n        }\n    }\n    \n    return state;\n}\n\nconst giftCardReducer = (state = initState, action) => {\n    \n}\n\nexport default shoppingApp;"]},"metadata":{},"sourceType":"module"}