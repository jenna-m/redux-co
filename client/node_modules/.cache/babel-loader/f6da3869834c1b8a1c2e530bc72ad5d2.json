{"ast":null,"code":"var _jsxFileName = \"/Users/Jenna/JavaScript/_Projects/shopping-cart/client/src/components/footer/contact/contactForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nconst schema = yup.object().shape({\n  name: yup.string().required('Name required'),\n  email: yup.string().email().required('Valid email required'),\n  message: yup.string().min(10).max(600).required('Message required')\n});\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      let postToUrl = 'http://localhost:3000/contact';\n      await axios.post(postToUrl, {\n        firstName: 'Fred',\n        lastName: 'Flinstone'\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"contact-form-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      validationSchema: schema,\n      initialValies: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          setSubmitting(false);\n        }, 400);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, ({\n      isSubmitting\n    }) => React.createElement(Form, {\n      id: \"contact-form\",\n      role: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: true,\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Field, {\n      type: \"name\",\n      name: \"name\",\n      id: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: true,\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: true,\n      name: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Message\"), React.createElement(Field, {\n      component: \"textarea\",\n      name: \"message\",\n      id: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"message\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      onClick: () => {\n        this.handleSubmit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/shopping-cart/client/src/components/footer/contact/contactForm.js"],"names":["React","Formik","Form","Field","ErrorMessage","yup","axios","schema","object","shape","name","string","required","email","message","min","max","ContactForm","Component","constructor","props","handleSubmit","postToUrl","post","firstName","lastName","then","response","console","log","catch","error","bind","render","values","setSubmitting","setTimeout","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\n\nconst schema = yup.object().shape({\n    name: yup.string().required('Name required'),\n    email: yup.string().email().required('Valid email required'),\n    message: yup.string().min(10).max(600).required('Message required')\n});\n\nclass ContactForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit = async() => {\n        let postToUrl = 'http://localhost:3000/contact'\n        await axios.post(postToUrl, {\n            firstName: 'Fred',\n            lastName: 'Flinstone'\n        })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"contact-form-content\">\n                <Formik\n                    validationSchema={schema}\n                    initialValies={{\n                        name: '', \n                        email: '', \n                        message: '' \n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                            setSubmitting(false);\n                        }, 400)\n                    }}\n                    >\n                        {({ isSubmitting }) => (\n                            <Form id=\"contact-form\" role=\"form\">\n                                <label for name=\"name\">Name</label>\n                                <Field type=\"name\" name=\"name\" id=\"name\" />\n                                <ErrorMessage name=\"name\" component=\"span\" />\n                                <label for name=\"email\">Email</label>\n                                <Field type=\"email\" name=\"email\" id=\"email\" />\n                                <ErrorMessage name=\"email\" component=\"span\" />\n                                <label for name=\"message\">Message</label>\n                                <Field component=\"textarea\" name=\"message\" id=\"message\" />\n                                <ErrorMessage name=\"message\" component=\"span\" />\n                                <button type=\"submit\" disabled={isSubmitting} onClick={() => {this.handleSubmit()}} >\n                                    Submit\n                                </button>\n                            </Form>\n                        )}\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}